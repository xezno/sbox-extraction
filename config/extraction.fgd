@PointClass base(Targetname, EnableDisable, PlayerClass) tags( Info ) editormodel( "models/dev/playerstart_tint.vmdl", fixedbounds ) color(0 0 255)  = info_player_start_team_a : "Spawn point for team A"
[
	// HACK: 
	rendercolor(color255) : "Color (R G B)" : "0 0 255"
]


@PointClass base(Targetname, EnableDisable, PlayerClass) tags( Info ) editormodel( "models/dev/playerstart_tint.vmdl", fixedbounds ) color(255 0 0) = info_player_start_team_b : "Spawn point for team B"
[
	// HACK: 
	rendercolor(color255) : "Color (R G B)" : "255 0 0"
]

@SolidClass base(Trigger)
	metadata
	{
		auto_apply_material = "materials/editor/tools/nogadgets.vmat"
	}
  = trigger_no_gadgets : "Zone that prevents the use of gadgets"
[
]

@SolidClass base(Trigger) 
	metadata
	{
		auto_apply_material = "materials/editor/tools/objective.vmat"
	}
  = trigger_objective : "Objective Zone"
[
]

@PointClass editorModel( "models/rust_props/black_bin/blackbin.vmdl" ) = ent_health_station : "Health station"
[
]

@PointClass model() = obj_extraction_vehicle : "Extraction Vehicle (EV)"
[
	model(studio) : "World model" : "models/rust_vehicles/truck_cabin/truck_trailer_a.vmdl" : "The model to use for the EV."
	health(float) [ group="EV Properties" ] : "Health" : 500 : "The amount of health this EV has."
	startRepaired(boolean) [ group="EV Properties" ] : "Start Repaired" : 0 : "Whether to spawn this EV repaired or not."
	speed(float) [ group="EV Properties" ] : "Speed" : 20 : "The speed at which to move the EV when repaired."
	target(target_destination) : "First stop target" : : "The name of the first path_track entity in the path that the EV should follow."
]
